#!/usr/bin/env python

import sys
import socket


from keystoneauth1 import loading
from keystoneauth1 import session
from novaclient import client
from oslo_config import cfg


keystone_opts = [
    cfg.StrOpt('auth_url'),
    cfg.StrOpt('username'),
    cfg.StrOpt('password'),
    cfg.StrOpt('project_name'),
    cfg.StrOpt('project_domain_name'),
    cfg.StrOpt('user_domain_name')

]

service_opts = [
    cfg.StrOpt('binary'),
    cfg.BoolOpt('prune'),
    cfg.IntOpt('api_timeout'),
]


CONF = cfg.CONF

CONF.register_opts(service_opts, "liveness")

CONF.register_opts(keystone_opts, "keystone_authtoken")

CONF(sys.argv[1:])

loader = loading.get_plugin_loader('password')

auth = loader.load_from_options(auth_url=CONF.keystone_authtoken.auth_url,
                                 username=CONF.keystone_authtoken.username,
                                 password=CONF.keystone_authtoken.password,
                                 user_domain_name=CONF.keystone_authtoken.user_domain_name,
                                 project_domain_name=CONF.keystone_authtoken.project_domain_name,
                                 project_name=CONF.keystone_authtoken.project_name
                                 )

sess = session.Session(auth=auth)

nova = client.Client("2.1", session=sess, timeout=CONF.liveness.api_timeout)

try:
    services = nova.services.list(host=None, binary=CONF.liveness.binary)
except:
    print "Service API execution failed"
    exit(0)

host = socket.gethostname()

rtn_code = 1

for service in services:
    if service.state == 'up' and service.host == host:
        rtn_code = 0
    elif service.state == 'down' and CONF.liveness.prune:
        nova.services.delete(service.id)

exit(rtn_code)
