input {
  
  kafka {
    zk_connect => "monasca-zookeeper-1:{{cluster_config['monasca_zookeeper_port_internal']}},monasca-zookeeper-2:{{cluster_config['monasca_zookeeper_port_internal']}},monasca-zookeeper-3:{{cluster_config['monasca_zookeeper_port_internal']}}"
    topic_id => "transformed-log"
    group_id => "logstash-persister"
  }
}

filter {
    date {
        match => ["[log][timestamp]", "UNIX"]
        target => "@timestamp"
    }

    date {
        match => ["creation_time", "UNIX"]
        target => "creation_time"
    }

    grok {
        match => {
            "[@timestamp]" => "^(?<index_date>\d{4}-\d{2}-\d{2})"
            add_tag => [ "timestamp_added" ]
        }
    }

    if "dimensions" in [log] {
        ruby {
            code => "
                fieldHash = event['log']['dimensions']
                fieldHash.each do |key, value|
                    event[key] = value
                end
            "
        }
    }

    if "application_type" in [log] {
        mutate {
            add_field => {
                application_type => "%{[log][application_type]}"
            }
        }
    } else {
        mutate {
            add_field => {
                application_type => ""
            }
        }
    }

    mutate {
        add_field => {
            message => "%{[log][message]}"
            log_level => "%{[log][level]}"
            tenant => "%{[meta][tenantId]}"
            region => "%{[meta][region]}"
        }
        remove_field => ["@version" ,"_index_date", "meta", "log"]
    }

}

output {
    elasticsearch {
        index => "%{tenant}-%{index_date}"
        document_type => "logs"
        hosts => ["{{cluster_config['monasca_elasticsearch_endpoint_host_internal']}}:9200"]
        user => "{{cluster_config['monasca_elasticsearch_user']}}"
        password => "{{cluster_config['monasca_elasticsearch_password']}}"
        flush_size => 500
    }
}
